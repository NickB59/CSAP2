//© A+ Computer Science  -  www.apluscompsci.com
//Name -
//Date -
//Class -
//Lab  -

import java.util.Arrays;
import java.util.ArrayList;
import java.util.Scanner;
import static java.lang.System.*;
import static java.util.Arrays.*;

public class Class
{
	private String name;
	private Student[] studentList;
	private ArrayList<Student> studentListArray;
	public Class()
	{
		name="";
		//studentList = new Student[0];
		studentListArray = new ArrayList<Student>();
	}
	
	public Class(String name, int stuCount)
	{
		this.name = name;
		//studentList = new Student[stuCount];
		studentListArray = new ArrayList<Student>();
	}
	
	public void addStudent(int stuNum, Student s)
	{
		//studentList[stuNum] = s;
		studentListArray.add(stuNum, s);
	}
	
	public String getClassName()
	{
	   return name;	
	}
	
	public double getClassAverage()
	{
		double classAverage=0.0;
		//for(int i = 0; i < studentList.length; i++){
		//	classAverage += getStudentAverage(i);
		for(int i=0; i<studentListArray.size(); i++) {
			classAverage += getStudentAverage(i);
		}
		//classAverage = classAverage / studentList.length;
		//return classAverage;
		classAverage/= studentListArray.size();
		return classAverage;
	}
	
	public double getStudentAverage(int stuNum)
	{
		//return studentList[stuNum].getAverage();
		return studentListArray.get(stuNum).getAverage();
	}

	public double getStudentAverage(String stuName)
	{
		int index = 0;
		/*for(int i = 0; i < studentList.length; i++){
			if (stuName.equals(studentList[i].getName())){
				index = i;
			}
		}*/
		for(int i=0; i<studentListArray.size(); i++) {
			if(studentListArray.get(i).getName().equals(stuName)) {
				index=i;
			}
		}
		return getStudentAverage(index);
	}
	
	public String getStudentName(int stuNum)
	{
		String some = "";
		//return studentList[stuNum].getName();
		for(int i=0; i<studentListArray.size(); i++) {
			if(i==stuNum)
				some = studentListArray.get(i).getName();
		}
		
		return some;
	}

	public String getStudentWithHighestAverage()
	{
		double high = Double.MIN_VALUE;
		String hName ="";

		/*for(int i = 0; i < studentList.length; i++){
			if (getStudentAverage(i) > high){
				high = getStudentAverage(i);
				hName = studentList[i].getName();
			}
		}*/
		for(int i=0; i<studentListArray.size(); i++) {
			if(studentListArray.get(i).getAverage()>high) {
				high = studentListArray.get(i).getAverage();
				hName = studentListArray.get(i).getName();
			}
		}
		
		return hName;
	}

	public String getStudentWithLowestAverage()
	{
		double low = Double.MAX_VALUE;
		String hName ="";		
		
		/*for(int i = 0; i < studentList.length; i++){
			if (getStudentAverage(i) < low){
				low = getStudentAverage(i);
				hName = studentList[i].getName();
			}
		}*/
		for(int i=0; i<studentListArray.size(); i++) {
			if(studentListArray.get(i).getAverage()>low) {
				low = studentListArray.get(i).getAverage();
				hName = studentListArray.get(i).getName();
			}
		}
		
		return hName;
	}
	
	public String getFailureList(double failingGrade)
	{
		String output="";
		/*for(int i = 0; i < studentList.length; i++){
			if (getStudentAverage(i) < 70){
				output += studentList[i].getName();
			}
		}*/
		for(int i=0; i<studentListArray.size(); i++) {
			if(studentListArray.get(i).getAverage()<=failingGrade)
				output+= studentListArray.get(i).getName();
		}
		return output;
	}
	
	public String toString()
	{
		String output=""+getClassName()+"\n"+ studentListArray.toString()+"\n";
		/*for (int i = 0; i < studentList.length; i++){
			output += String.format(studentList[i].toString() + "\t" + "%.2f", studentList[i].getAverage()) + "\n";
		}*/
		return output;
	}  	
}